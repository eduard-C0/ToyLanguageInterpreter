Program state
ID: 1 
Exe Stack: (VarDeclaration{name='v1', type=Reference(int) };(VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))))  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))) VarDeclaration{name='v1', type=Reference(int) }  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))) VarDeclaration{name='v1', type=Reference(int) }  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))) VarDeclaration{name='cnt', type=int}  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))) VarDeclaration{name='cnt', type=int}  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))) New(v1, 1)  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))) New(v1, 1)  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))) NewSemaphore(cnt,ReadHeap(v1))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))) NewSemaphore(cnt,ReadHeap(v1))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 3 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 3 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (print(ReadHeap(v1)-1);Release(cnt)) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (print(ReadHeap(v1));Release(cnt)) WriteHeap( v1,ReadHeap(v1)*10)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 3 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (print(ReadHeap(v1)-1);Release(cnt)) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (print(ReadHeap(v1));Release(cnt)) WriteHeap( v1,ReadHeap(v1)*10)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 3 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='v1', type=Reference(int) };(VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))))  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))) VarDeclaration{name='v1', type=Reference(int) }  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))) VarDeclaration{name='v1', type=Reference(int) }  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))) VarDeclaration{name='cnt', type=int}  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))) VarDeclaration{name='cnt', type=int}  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))) New(v1, 1)  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))) New(v1, 1)  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))) NewSemaphore(cnt,ReadHeap(v1))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))) NewSemaphore(cnt,ReadHeap(v1))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 3 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 3 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (print(ReadHeap(v1)-1);Release(cnt)) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (print(ReadHeap(v1));Release(cnt)) WriteHeap( v1,ReadHeap(v1)*10)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 3 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (print(ReadHeap(v1)-1);Release(cnt)) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 2 
Exe Stack: (print(ReadHeap(v1));Release(cnt)) WriteHeap( v1,ReadHeap(v1)*10)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 3 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='v1', type=Reference(int) };(VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))))  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))) VarDeclaration{name='v1', type=Reference(int) }  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))) VarDeclaration{name='v1', type=Reference(int) }  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))) VarDeclaration{name='cnt', type=int}  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))) VarDeclaration{name='cnt', type=int}  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))) New(v1, 1)  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))) New(v1, 1)  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))) NewSemaphore(cnt,ReadHeap(v1))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))) NewSemaphore(cnt,ReadHeap(v1))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (print(ReadHeap(v1)-1);Release(cnt)) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (print(ReadHeap(v1));Release(cnt)) WriteHeap( v1,ReadHeap(v1)*10)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (print(ReadHeap(v1)-1);Release(cnt)) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (print(ReadHeap(v1));Release(cnt)) WriteHeap( v1,ReadHeap(v1)*10)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (VarDeclaration{name='v1', type=Reference(int) };(VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))))  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))) VarDeclaration{name='v1', type=Reference(int) }  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))) VarDeclaration{name='v1', type=Reference(int) }  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))) VarDeclaration{name='cnt', type=int}  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))) VarDeclaration{name='cnt', type=int}  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))) New(v1, 1)  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))) New(v1, 1)  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))) NewSemaphore(cnt,ReadHeap(v1))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))) NewSemaphore(cnt,ReadHeap(v1))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (print(ReadHeap(v1)-1);Release(cnt)) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (print(ReadHeap(v1));Release(cnt)) WriteHeap( v1,ReadHeap(v1)*10)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (print(ReadHeap(v1)-1);Release(cnt)) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (print(ReadHeap(v1));Release(cnt)) WriteHeap( v1,ReadHeap(v1)*10)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (VarDeclaration{name='v1', type=Reference(int) };(VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))))  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))) VarDeclaration{name='v1', type=Reference(int) }  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))) VarDeclaration{name='v1', type=Reference(int) }  
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (VarDeclaration{name='cnt', type=int};(New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))) VarDeclaration{name='cnt', type=int}  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))) VarDeclaration{name='cnt', type=int}  
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (New(v1, 1);(NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))) New(v1, 1)  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))) New(v1, 1)  
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (NewSemaphore(cnt,ReadHeap(v1));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))) NewSemaphore(cnt,ReadHeap(v1))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))) NewSemaphore(cnt,ReadHeap(v1))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))) Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: (Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (print(ReadHeap(v1)-1);Release(cnt)) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (print(ReadHeap(v1));Release(cnt)) WriteHeap( v1,ReadHeap(v1)*10)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: (print(ReadHeap(v1)-1);Release(cnt)) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: (print(ReadHeap(v1));Release(cnt)) WriteHeap( v1,ReadHeap(v1)*10)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: (WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))) Acquire(cnt)  
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 4 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 4 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 4 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 4 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 4 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 4 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 5 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 4 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 5 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 4 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 5 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 4 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 5 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 4 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 5 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 6 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 4 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 5 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 6 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 4 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 5 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 6 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 4 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 5 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 6 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 4 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 5 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 6 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 4 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 5 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 6 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 4 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 5 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 6 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 4 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 5 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 6 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 4 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 5 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 6 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 4 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 5 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 6 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 4 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 5 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 6 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[5]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 1)
NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: NewSemaphore(cnt,ReadHeap(v1))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=0 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Fork((Acquire(cnt);(WriteHeap( v1,ReadHeap(v1)*10);(WriteHeap( v1,ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->1
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 2 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[2]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: Acquire(cnt)
print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 1 
Exe Stack: print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[1]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[1]


Program state
ID: 1 
Exe Stack: print(ReadHeap(v1)-1)
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[1]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[1]


Program state
ID: 1 
Exe Stack: print(ReadHeap(v1)-1)
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[1]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[1]


Program state
ID: 1 
Exe Stack: print(ReadHeap(v1)-1)
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[1]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[1]


Program state
ID: 1 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[1]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[1]


Program state
ID: 1 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[1]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[1]


Program state
ID: 1 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: Acquire(cnt)
WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[]


Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->10
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->100
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->100
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->100
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*2)
print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->100
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->200
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: print(ReadHeap(v1))
Release(cnt)

 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->200
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->200
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: print(ReadHeap(v1))
Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9] 
File Table:  
Heap: 1->200
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9, 200] 
File Table:  
Heap: 1->200
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack: Release(cnt)
 
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9, 200] 
File Table:  
Heap: 1->200
 
LockTable: 
SemaphoreTable: 1->1=[3]


Program state
ID: 3 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int)  
Output Console: [10, 9, 200] 
File Table:  
Heap: 1->200
 
LockTable: 
SemaphoreTable: 1->1=[]


