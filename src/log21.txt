Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: print(1)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(1)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: print(1)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(1)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: print(1)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(1)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: print(1)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(1)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);print(ReadHeap(v1))))
CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);print(ReadHeap(v2))))
CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: print(1)
Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);print(ReadHeap(v3))))
CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: CountDown(cnt)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: print(1)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(1)
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [1, 20, 1, 30, 1, 40, 100, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 4 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 4 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 4 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 4 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 4 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 5 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 4 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 5 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: print(3)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 4 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 5 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: print(3)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 4 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 5 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 5 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 5 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: print(4)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 5 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: print(4)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 5 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 5 
Exe Stack: CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 5 
Exe Stack: CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 5 
Exe Stack: print(5)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 5 
Exe Stack: print(5)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40, 5] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 5 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40, 5] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40, 5] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40, 5] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40, 5] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40, 5, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40, 5, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40, 5, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40, 5, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40, 5, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40, 5, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 3, 30, 4, 40, 5, 100, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table:  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 2 
Exe Stack: CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->3


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: print(2)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack: print(2)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 2 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->2


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack: print(3)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack: print(3)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 3 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->1


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack: print(4)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack: print(4)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 4 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 1 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
LockTable: 
SemaphoreTable: 
LatchTable: 1->0


Program state
ID: 2 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack:  
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack:  
Sym Table: null 
Output Console: [20, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack:  
Sym Table: null 
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 30, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(2)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(2)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack:  
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(3)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(3)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack:  
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(4)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(4)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack:  
Sym Table: null 
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(2)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(2)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack:  
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(3)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(3)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack:  
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(4)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(4)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack:  
Sym Table: null 
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(2)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(2)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack:  
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(3)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(3)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack:  
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(4)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(4)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack:  
Sym Table: null 
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(2)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack: print(2)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 2 
Exe Stack:  
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(3)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack: print(3)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 3 
Exe Stack:  
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(4)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(4)
 
Sym Table: null 
Output Console: [20, 2, 30, 3, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack:  
Sym Table: null 
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 1 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 2, 30, 3, 40, 4, 100, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='cnt', type=int}
VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v1', type=Reference(int) }
VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v2', type=Reference(int) }
VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: VarDeclaration{name='v3', type=Reference(int) }
New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: New(v1, 2)
New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap:  
StackOfSymTable: cnt=0 v1=(0, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: New(v2, 3)
New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(0, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: New(v3, 4)
CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(0, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDownLatch(cnt,ReadHeap(v2))
Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=0 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Fork((WriteHeap( v1,ReadHeap(v1)*10);(print(ReadHeap(v1));CountDown(cnt))))
Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Fork((WriteHeap( v2,ReadHeap(v2)*10);(print(ReadHeap(v2));CountDown(cnt))))
Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: WriteHeap( v1,ReadHeap(v1)*10)
print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->2
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Fork((WriteHeap( v3,ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: print(ReadHeap(v1))
CountDown(cnt)
 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack: WriteHeap( v2,ReadHeap(v2)*10)
print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [] 
File Table:  
Heap: 1->20
2->3
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: print(5)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack: print(5)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack: print(ReadHeap(v2))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack: WriteHeap( v3,ReadHeap(v3)*10)
print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20] 
File Table:  
Heap: 1->20
2->30
3->4
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 5 
Exe Stack:  
Sym Table: null 
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)

 
Sym Table: null 
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack: print(6)
 
Sym Table: null 
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack: print(6)
 
Sym Table: null 
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack: print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 5, 30] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 6 
Exe Stack:  
Sym Table: null 
Output Console: [20, 5, 30, 6, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 5, 30, 6, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: Await(cnt)
print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack: CountDown(cnt)
 
Sym Table: null 
Output Console: [20, 5, 30, 6, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack: print(7)
 
Sym Table: null 
Output Console: [20, 5, 30, 6, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack: print(7)
 
Sym Table: null 
Output Console: [20, 5, 30, 6, 40] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40, 7] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 7 
Exe Stack:  
Sym Table: null 
Output Console: [20, 5, 30, 6, 40, 7] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(100)
CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40, 7] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40, 7, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
print(100)

 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40, 7, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40, 7, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: CountDown(cnt)
print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40, 7, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40, 7, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack: print(100)
 
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40, 7, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

Program state
ID: 4 
Exe Stack:  
Sym Table: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int)  
Output Console: [20, 5, 30, 6, 40, 7, 100, 100] 
File Table:  
Heap: 1->20
2->30
3->40
 
StackOfSymTable: cnt=1 v1=(1, int) v2=(2, int) v3=(3, int) 

ProceduresTable: 

